apply plugin: 'com.android.application'
apply from: './dependencies.gradle'

// Cannot make method static, @runchen.brc
String getEnvValue(key, defValue) {
    def val = System.getProperty(key)
    if (null != val) {
        return val
    }
    val = System.getenv(key)
    if (null != val) {
        return val
    }
    return defValue
}

ext.MTL_buildId = getEnvValue("MUPP_BUILD_ID", 'localbuild')
ext.BUILD_IM_TYPE = getEnvValue("BUILD_IM_TYPE", 'internal')

android {
    compileSdkVersion 33
    buildToolsVersion "33.0.2"

    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword 'livepush'
            storeFile file('interaction.jks')
            storePassword 'livepush'
        }
        debug {
            keyAlias 'key0'
            keyPassword 'livepush'
            storeFile file('interaction.jks')
            storePassword 'livepush'
        }
    }

    defaultConfig {
        applicationId "com.aliyun.enterprise.live"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 2
        versionName '2.0.0'

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: 'enterprise']
            }
        }
    }

    buildTypes {
        release {
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules-app.pro'
            consumerProguardFiles 'proguard-rules.pro' //子模块
            buildConfigField "Boolean", "DEBUGGING_FEATURES", "false"
        }
        debug {
            minifyEnabled false
            shrinkResources false
            buildConfigField "Boolean", "DEBUGGING_FEATURES", "false"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation'
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${project.name}-${variant.buildType.name}-${MTL_buildId}.apk"
        }
    }
}